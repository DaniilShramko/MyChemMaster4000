/*
 * Click nbfs://nbhost/SystemFileSystem/Te    @Override
    public Component getEditorComponent() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    @Override
    public void setItem(Object anObject) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    @Override
    public Object getItem() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    @Override
    public void selectAll() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    @Override
    public void addActionListener(ActionListener l) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    @Override
    public void removeActionListener(ActionListener l) {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }
mplates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.chemmastergui;

import java.awt.*;
import java.util.ArrayList;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

import java.util.HashMap;

/**
 *
 * @author shram
 */
public class AddChemical extends javax.swing.JFrame {

    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(AddChemical.class.getName());
    public ArrayList<Chemical> chemList = new ArrayList<>();

    public AddChemical() {
        initComponents();
        TableActionEvent event = new TableActionEvent() {
            @Override
            public void onRemove(int row) {
                if (ingredientTable.isEditing()) {
                    ingredientTable.getCellEditor().stopCellEditing();
                }
                DefaultTableModel ingredientModel = (DefaultTableModel) ingredientTable.getModel();
                ingredientModel.removeRow(row);
            }
        };
        ingredientTable.getColumnModel().getColumn(2).setCellRenderer(new TableActionCellRender());
        ingredientTable.getColumnModel().getColumn(2).setCellEditor(new TableActionCellEditor(event));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        chemNameLabel = new javax.swing.JLabel();
        chemNameTF = new javax.swing.JTextField();
        chemTempLabel = new javax.swing.JLabel();
        chemTempTF = new javax.swing.JTextField();
        chemAmountLabel = new javax.swing.JLabel();
        chemAmountTF = new javax.swing.JTextField();
        chemColorLabel = new javax.swing.JLabel();
        colorPickButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ingredientTable = new javax.swing.JTable();
        addIngridientButton = new javax.swing.JButton();
        addChemButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add Chemical");
        setAlwaysOnTop(true);
        setMinimumSize(new java.awt.Dimension(417, 240));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        chemNameLabel.setText("Name");

        chemNameTF.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        chemNameTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chemNameTFActionPerformed(evt);
            }
        });

        chemTempLabel.setText("Temperature");

        chemTempTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chemTempTFActionPerformed(evt);
            }
        });

        chemAmountLabel.setText("Amount");

        chemAmountTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chemAmountTFActionPerformed(evt);
            }
        });

        chemColorLabel.setText("Color");

        colorPickButton.setText("Pick color");
        colorPickButton.setMaximumSize(new java.awt.Dimension(64, 22));
        colorPickButton.setMinimumSize(new java.awt.Dimension(64, 22));
        colorPickButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colorPickButtonActionPerformed(evt);
            }
        });

        ingredientTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Amount", "Remove"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Float.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        ingredientTable.setRowHeight(25);
        jScrollPane1.setViewportView(ingredientTable);
        try{
            if (ingredientTable.getColumnModel().getColumnCount() > 0) {
                ingredientTable.getColumnModel().getColumn(0).setCellEditor(new DefaultCellEditor(
                    new IngredientsComboBox()
                )
            );
        }
    }catch(Exception e ){
        System.out.println(e);
    }

    addIngridientButton.setText("Add Ingridient");
    addIngridientButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            addIngridientButtonActionPerformed(evt);
        }
    });

    addChemButton.setText("Add Chemical");
    addChemButton.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            addChemButtonActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap()
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(chemNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(chemNameTF))
                .addGroup(layout.createSequentialGroup()
                    .addComponent(chemTempLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(chemTempTF))
                .addGroup(layout.createSequentialGroup()
                    .addComponent(chemAmountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(chemAmountTF))
                .addGroup(layout.createSequentialGroup()
                    .addComponent(chemColorLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(colorPickButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(addIngridientButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(addChemButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addContainerGap())
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addGap(9, 9, 9)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(chemNameLabel)
                .addComponent(chemNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(chemTempLabel)
                .addComponent(chemTempTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(chemAmountLabel)
                .addComponent(chemAmountTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(chemColorLabel)
                .addComponent(colorPickButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(addIngridientButton)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(addChemButton, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addContainerGap())
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chemNameTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chemNameTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chemNameTFActionPerformed

    private void chemTempTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chemTempTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chemTempTFActionPerformed

    private void chemAmountTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chemAmountTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chemAmountTFActionPerformed

    private void colorPickButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colorPickButtonActionPerformed
        JColorChooser cc = new JColorChooser();

        color = JColorChooser.showDialog(this, "Pick the color", Color.black);


    }//GEN-LAST:event_colorPickButtonActionPerformed

    private void addIngridientButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addIngridientButtonActionPerformed
        DefaultTableModel model = (DefaultTableModel) ingredientTable.getModel();
        model.addRow(new Object[]{null, 1f, null});

    }//GEN-LAST:event_addIngridientButtonActionPerformed

    private void addChemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addChemButtonActionPerformed
        String temp;
        Float amount;
        ChemIO chemIO = new ChemIO();

        try {
            Float.valueOf(chemAmountTF.getText());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "Amount is empty or NaN");

            return;
        }
        try {
            chemList = chemIO.readChem();
        } catch (Exception ex) {
            System.out.println("Read ERR addchem " + ex);
        }
        DefaultTableModel ingredientModel = (DefaultTableModel) ingredientTable.getModel();
        if (chemNameTF.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Name is empty");
            return;
        }
        String name = chemNameTF.getText();
        temp = chemTempTF.getText();

        amount = Float.valueOf(chemAmountTF.getText());

        HashMap<Chemical, Float> recipie = new HashMap<>();

        for (int i = 0; i < ingredientModel.getRowCount(); i++) {
            recipie.put(chemIO.getChem((String) ingredientModel.getValueAt(i, 0), chemList), Float.parseFloat(ingredientModel.getValueAt(i, 1).toString()));

        }

        Chemical newChem = new Chemical(name, temp, amount, recipie, color);
        try {
            chemIO.writeChem(newChem);
        } catch (Exception ex) {
            System.getLogger(AddChemical.class.getName()).log(System.Logger.Level.ERROR, (String) null, ex);
        }

        this.dispose();

    }//GEN-LAST:event_addChemButtonActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new AddChemical().setVisible(true));
    }
    private Color color;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addChemButton;
    private javax.swing.JButton addIngridientButton;
    private javax.swing.JLabel chemAmountLabel;
    private javax.swing.JTextField chemAmountTF;
    private javax.swing.JLabel chemColorLabel;
    private javax.swing.JLabel chemNameLabel;
    private javax.swing.JTextField chemNameTF;
    private javax.swing.JLabel chemTempLabel;
    private javax.swing.JTextField chemTempTF;
    private javax.swing.JButton colorPickButton;
    private javax.swing.JTable ingredientTable;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

}
